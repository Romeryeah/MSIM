c RT3D Biodegradation Module
c Biodegradation Reaction Module Subroutine Rxns
c
      SUBROUTINE rxns(ncomp,nvrxndata,j,i,k,y,dydt,poros,                 &
     & rhob,reta,rc,nlay,nrow,ncol,vrc)
INCLUDE 'PARAM.INC'    
c ***** Block 1: Comments block *******
c23456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123
c ncomp - Total number of components
c nvrxndata - Total number of variable reaction parameters to be input via RCT file
c J, I, K - node location (used if reaction parameters are spatially variable)
c y - Concentration value of all component at the node [array variable y(ncomp)]
c dydt - Computed RHS of your differential equation [array variable dydt(ncomp)]
c poros ¨C porosity of the node
c reta -  Retardation factor [array variable reta(mcomp)]
c rhob -  bulk density of the node
c rc - Stores spatially constant reaction parameters (up to 100 values)
c nlay, nrow, ncol - Grid size (used only for dimensioning purposes)
c vrc - Array variable that stores spatially variable reaction parameters
c ***** End of Block 1 *******

c *** Block 2: Please do not modify this standard interface block ***
      !MS$ATTRIBUTES DLLEXPORT :: rxns
      IMPLICIT NONE
      INTEGER ncol,nrow,nlay
      INTEGER ncomp,nvrxndata,j,i,k
      INTEGER First_time
      DATA First_time/1/
      DOUBLE PRECISION y,dydt,poros,rhob,reta
      DOUBLE PRECISION rc,vrc
      DIMENSION y(ncomp),dydt(ncomp),rc(50)
      DIMENSION vrc(ncol,nrow,nlay,nvrxndata),reta(50)
c ****** End of block 2 *******

c *** Block 3: Declare your problem-specific new variables here ***
c     INTEGER
c		  INCLUDE 'PARAM.INC'
   		DOUBLE PRECISION CEs, BTEX, O2, EA, X1, X2, X3, X4
      DOUBLE PRECISION f_b, R_b, u_b_ae1, Y_b_ae1, K_b_ae1, K_O
      DOUBLE PRECISION u_inact_c, u_enh, u_inact_b, u_b_ae2, Y_b_ae2 
      DOUBLE PRECISION K_b_ae2, K_ic_ae, u_b_an1, Y_b_an1, K_b_an1 
			DOUBLE PRECISION K_ic_an, K_i_c2, I_an_o, K_EA, f_c, R_c, u_c_ae
			DOUBLE PRECISION Y_c_ae, K_c_ae, u_c_an1, Y_c_an1, K_c_an1 
			DOUBLE PRECISION u_c_an2, Y_c_an2, K_c_an2, K_ib_an, F_b 
			DOUBLE PRECISION F_c, W_b, W_c, eta_bio, gamma, n, b_ae1, b_an1
			DOUBLE PRECISION b_ae2, b_an2, T_c
      DOUBLE PRECISION ytcepce,ydcetce,yvcdce
c ***** End of Block 3  ******

c *** Block 4: Initilize reaction parameters here, if required ***
      IF (First_time .EQ. 1) THEN

          First_time = 0 !reset First_time to skip this block later
      END IF
c		  INCLUDE 'PARAM.INC'
         f_b = 0.5
    		 R_b = 1.0
         u_b_ae1 = 0.4
         Y_b_ae1 = 1.0 
         K_b_ae1 = 200
         K_O = 5
         u_inact_c = 0.005
         u_enh = 0.005
         u_inact_b = 0.005
         u_b_ae2 = 0.1
         Y_b_ae2 = 1.0
         K_b_ae2 =200
         K_i_c1 = 20000
         u_b_an1 = 0.1
         Y_b_an1 = 1.0
         K_b_an1 = 200  
         K_i_c2 = 10000
         I_an_o = 0.50
         K_EA = 200
         f_c = 1.0
         R_c = 1.0
         u_c_ae = 0.05
         Y_c_ae = 1.0
         K_c_ae = 200
         u_c_an1 = 0.05
         Y_c_an1 = 1.0
         K_c_an1 = 200
         u_c_an2 = 0.01
         Y_c_an2 = 1.0
         K_c_an2 = 200
         K_i_b2 = 10000
         F_bb = 0.1
         F_cc = 0.15
         W_b = 0.1
         W_c = 0.15
         eta_bio = 1e-5
         gamma = 0.20
         n = 0.30
         b_ae1 = 0.0005
         b_an1 = 0.0001
         b_ae2 = 0.0001
         b_an2 = 0.0005
         T_c = 0.05
c MODIFY MAXIMUM SUBSTRATE UTILIZATION RATE IF PRESENCE OF COMPETITIVE 
c INHIBITION 
         K_b_ae22 = K_b_ae2*(1+100/K_i_c1)
         u_b_ae22 = u_b_ae2-u_inact_c*(100-y(2))+u_enh_b*               &
   &     exp(-100/K_b_ae22)-u_inact_b*(100-y(1))*(1-exp(-100/(100+100)))
         K_c_ae1 = K_c_ae*(1+100/K_i_b1)
         u_c_ae1 = (u_c_ae/u_b_ae2)*u_b_ae22
         K_c_an22 = K_c_an2*(1+100/K_i_b2)
         u_c_an22 = u_c_an2-u_inact_b*(100-y(1))+u_enh_c*               &
    &  exp(-100/K_c_an22)-u_inact_c*(100-y(2))*(1-exp(-100/(100+100)))
         K_b_an22 = K_b_an2*(1+100/K_i_c2)
         u_b_an22 = (u_b_an2/u_c_an2)*u_c_an22
c ***** End of Block 4  ******

c  *** Block 5: Definition of other variable names ***
       BTEX = y(1)
       CEs = y(2)
       O2 = y(3)
       EA = y(4)
       X1 = y(5)
       X2 = y(6)
       X3 = y(7)
       X4 = y(8)
c ***** End of Block 5  ******

c  *** Block 6: Definition of Differential Equations ***
%BTEX biodegradation
    dx(1) = -(f_b / R_b) * ((u_b_ae1 * y(5) / Y_b_ae1 *                   &
     & (y(1)/(K_b_ae1+y(1))) * (y(3)/(K_O+y(3)))) + (u_b_ae22 * y(6) /    &
     &  Y_b_ae2 * (y(1)/(K_b_ae22+y(1))) * (y(3)/(K_O+y(3)))) +           &
     & (u_b_an22 * y(8) / Y_b_an2 * (y(1)/(K_b_an22+y(1))) *              &
     & I_an_o/(I_an_o + y(3))) * (y(4)/(K_EA+y(4)))))
% CAHs biodegradation
    dx(2) = -f_c^2 / R_c * ((u_c_ae1 * y(6) / Y_c_ae *                    &
    & (y(2)/(K_c_ae1+y(2))) * (y(3)/(K_O+y(3)))) + (u_c_an1 * y(7) /      &
    & Y_c_an1 * (y(2)/(K_c_an1+y(2))) * (I_an_o/(I_an_o + y(3))) *        &
    & (y(4)/(K_EA+y(4)))) + (u_c_an22 * y(8) / Y_c_an2 * (y(2)/           &
    & (K_c_an22+y(2))) * (I_an_o/(I_an_o + y(3))) * (y(4)/(K_EA+y(4)))))
% O2 depletion
    dx(3) = -((u_b_ae1 * y(5) / Y_b_ae1 * (y(1)/(K_b_ae1+y(1))) *         &
    & (y(3)/(K_O+y(3))))*F_bb + (u_b_ae22 * y(6) / Y_b_ae2 * (y(1)/       &
    & (K_b_ae22+y(1))) * (y(3)/(K_O+y(3))))*F_bb + (u_c_ae1 * y(6) /      &
    & Y_c_ae * (y(2)/(K_c_ae1+y(2))) * (y(3)/(K_O+y(3))))*F_cc)
% EA depletion
    dx(4) = -((u_b_an1 * y(7) / Y_b_an1 * (y(1)/(K_b_an1+y(1))) *         & 
    & (I_an_o/(I_an_o + y(3))) * (y(4)/(K_EA+y(4))))*W_b +(u_b_an22 *     &
    & y(8) / Y_b_an2 * (y(1)/(K_b_an22+y(1))) * (I_an_o/(I_an_o + y(3)))  &
    & * (y(4)/(K_EA+y(4))))*W_b + (u_c_an1 * y(7) / Y_c_an1 *             &
    & (y(2)/(K_c_an1+y(2))) * (I_an_o/(I_an_o + y(3))) * (y(4)/           &
    & (K_EA+y(4))))*W_c +(u_c_an22 * y(8) / Y_c_an2 * (y(2)/(K_c_an22+    &
    & y(2))) * (I_an_o/(I_an_o + y(3))) * (y(4)/(K_EA+y(4))))*W_c)
% Biomass growth 1£¨Aer, BTEX£©
    dx(5) = ((u_b_ae1*y(5) * (y(1)/(K_b_ae1+y(1))) * (y(3)/(K_O+y(3))))   &
    & * (1-eta_bio/(gamma*n)) - b_ae1*y(5) - 1/T_c*y(2))*y(5)
% Biomass growth 2£¨Aer, BTEX+CAHs£©
    dx(6) = (((u_b_ae22*y(6) * (y(1)/(K_b_ae22+y(1))) *                   &
    & (y(3)/(K_O+y(3)))) + (u_c_ae1*y(6) * (y(2)/(K_c_ae1+y(2))) *        &
    & (y(3)/(K_O+y(3))))) * (1-eta_bio/(gamma*n)) - b_ae2*y(6))*y(6)
% Biomass growth 3£¨An, CAHs£©
    dx(7) = (((u_c_an1*y(7) * (y(2)/(K_c_an1+y(2))) * (I_an_o/(I_an_o     &
    & + y(3))) * (y(4)/(K_EA+y(4)))) + (u_b_an1 * y(7) / Y_b_an1 * (y(1)  &
    & /(K_b_an1+y(1))) * (I_an_o/(I_an_o + y(3))) * (y(4)/(K_EA+y(4)))))  &
    & * (1-eta_bio/(gamma*n)) - b_an1*y(7))*y(7)
% Biomass growth 4£¨An, BTEX+CAHs£©    
    dx(8) = (((u_b_an22*y(8) * (y(1)/(K_b_an22+y(1))) * (I_an_o/(I_an_o   &
    & + y(3))) * (y(4)/(K_EA+y(4)))) + (u_c_an22*y(8) * (y(2)/            &
    & (K_c_an22+y(2))) * (I_an_o/(I_an_o + y(3))) * (y(4)/(K_EA+y(4)))))  &
    & * (1-eta_bio/(gamma*n)) - b_an*y(8))*y(8)   
c ***** End of Block 6  ******
      RETURN
      END